# Default BuildStream project configuration.

# Project name
#
# name: myproject


# Alias configuration
#
# Aliases are entirely project specific, they are
# configured as a simple dictionary, example:
#
# aliases:
#   baserock: git://git.baserock.org/baserock/
#   freedesktop: git://anongit.freedesktop.org/


# Plugin path configuration
#
# You may specify one or more project relative paths to
# subdirectories where plugins should be loaded from.
#
# plugins:
#
#   elements:
#   - plugins/local-elements
#   - plugins/shared-elements
#
#   sources:
#   - plugins/local-sources


# Variable Configuration
#
# You may override the defaults of variables on a project wide
# basis by specifying the 'variables' attribute.
#
# The defaults for this version of buildstream are listed
# below.
#
variables:

  # Maximum number of parallel build processes within a given
  # build, support for this is conditional on the element type
  # and the build system used (any element using 'make' can
  # implement this).
  #
  # Note: this value defaults to the number of cores available
  max-jobs: 4

  # Path configuration, to be used in build instructions.
  #
  prefix: "/usr"
  exec_prefix: "%{prefix}"
  bindir: "%{exec_prefix}/bin"
  sbindir: "%{exec_prefix}/sbin"
  libexecdir: "%{exec_prefix}/libexecdir"
  datadir: "%{prefix}/share"
  sysconfdir: "/etc"
  sharedstatedir: "%{prefix}/com"
  localstatedir: "/var"
  lib: "lib"
  libdir: "%{prefix}/%{lib}"
  includedir: "%{prefix}/include"
  infodir: "%{prefix}/info"
  mandir: "%{prefix}/man"

  # Indicates the build installation directory in the sandbox
  install-root: /buildstream/install

  # Define some patterns which might be used in multiple
  # elements
  strip-binaries: |

    find "%{install-root}" -type f \
      '(' -perm -111 -o -name '*.so*' -o -name '*.cmxs' -o -name '*.node' ')' \
      -exec sh -ec \
      'read -n4 hdr <"$1" # check for elf header
       if [ "$hdr" != "$(printf \\x7fELF)" ]; then
           exit 0
       fi
       debugfile="%{install-root}%{libdir}/debug/$(basename "$1")"
       mkdir -p "$(dirname "$debugfile")"
       objcopy --only-keep-debug "$1" "$debugfile"
       chmod 644 "$debugfile"
       strip --remove-section=.comment --remove-section=.note --strip-unneeded "$1"
       objcopy --add-gnu-debuglink "$debugfile" "$1"' - {} ';'


# Base sandbox environment, can be overridden by plugins
environment:
  PATH: /usr/bin:/bin:/usr/sbin:/sbin
  SHELL: /bin/sh
  TERM: dumb
  USER: tomjon
  USERNAME: tomjon
  LOGNAME: tomjon
  LC_ALL: C
  HOME: /tmp
  TZ: UTC

# List of environment variables which should not be taken into
# account when calculating a cache key for a given element.
#
environment-nocache: []


# Specify devices which should be available in the sandbox
devices:
- /dev/console
- /dev/full
- /dev/null
- /dev/urandom
- /dev/zero


# Element Overrides
#
# Base attributes declared by element default yaml files
# can be overridden on a project wide basis. The elements
# dictionary can be used to override variables, environments
# or plugin specific configuration data as shown below.
#
#
# elements:
#
#   autotools:
#
#     variables:
#       bindir: %{prefix}/bin
#
#     config:
#       configure-commands: ...
#
#     environment:
#       PKG_CONFIG_PATH=%{libdir}/pkgconfig
#
